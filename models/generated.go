// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"
)

type Sort string

const (
	SortCreated   Sort = "created"
	SortStartDate Sort = "startDate"
	SortEndDate   Sort = "endDate"
)

var AllSort = []Sort{
	SortCreated,
	SortStartDate,
	SortEndDate,
}

func (e Sort) IsValid() bool {
	switch e {
	case SortCreated, SortStartDate, SortEndDate:
		return true
	}
	return false
}

func (e Sort) String() string {
	return string(e)
}

func (e *Sort) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = Sort(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Sort", str)
	}
	return nil
}

func (e Sort) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
